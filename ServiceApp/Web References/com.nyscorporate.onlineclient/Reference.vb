'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
'
Namespace com.nyscorporate.onlineclient
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="srvEmailSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class srvEmail
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getClientDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private saveTrainedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.NYS_MailService.My.MySettings.Default.NYS_MailService_com_nyscorporate_onlineclient_srvEmail
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getClientDataCompleted As getClientDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserDataCompleted As getUserDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getCodeListCompleted As getCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event saveTrainedCompleted As saveTrainedCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClientData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getClientData(ByVal pstrPassword As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getClientData", New Object() {pstrPassword})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getClientDataAsync(ByVal pstrPassword As String)
            Me.getClientDataAsync(pstrPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getClientDataAsync(ByVal pstrPassword As String, ByVal userState As Object)
            If (Me.getClientDataOperationCompleted Is Nothing) Then
                Me.getClientDataOperationCompleted = AddressOf Me.OngetClientDataOperationCompleted
            End If
            Me.InvokeAsync("getClientData", New Object() {pstrPassword}, Me.getClientDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetClientDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getClientDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getClientDataCompleted(Me, New getClientDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUserData(ByVal pClientID As Integer, ByVal pstrPassword As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getUserData", New Object() {pClientID, pstrPassword})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserDataAsync(ByVal pClientID As Integer, ByVal pstrPassword As String)
            Me.getUserDataAsync(pClientID, pstrPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserDataAsync(ByVal pClientID As Integer, ByVal pstrPassword As String, ByVal userState As Object)
            If (Me.getUserDataOperationCompleted Is Nothing) Then
                Me.getUserDataOperationCompleted = AddressOf Me.OngetUserDataOperationCompleted
            End If
            Me.InvokeAsync("getUserData", New Object() {pClientID, pstrPassword}, Me.getUserDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserDataCompleted(Me, New getUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCodeList(ByVal pstrPassword As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getCodeList", New Object() {pstrPassword})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCodeListAsync(ByVal pstrPassword As String)
            Me.getCodeListAsync(pstrPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCodeListAsync(ByVal pstrPassword As String, ByVal userState As Object)
            If (Me.getCodeListOperationCompleted Is Nothing) Then
                Me.getCodeListOperationCompleted = AddressOf Me.OngetCodeListOperationCompleted
            End If
            Me.InvokeAsync("getCodeList", New Object() {pstrPassword}, Me.getCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCodeListCompleted(Me, New getCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveTrained", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function saveTrained(ByVal pstrEmailAddress As String, ByVal pintTrainingType As Integer, ByVal pstrPassword As String) As String
            Dim results() As Object = Me.Invoke("saveTrained", New Object() {pstrEmailAddress, pintTrainingType, pstrPassword})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub saveTrainedAsync(ByVal pstrEmailAddress As String, ByVal pintTrainingType As Integer, ByVal pstrPassword As String)
            Me.saveTrainedAsync(pstrEmailAddress, pintTrainingType, pstrPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub saveTrainedAsync(ByVal pstrEmailAddress As String, ByVal pintTrainingType As Integer, ByVal pstrPassword As String, ByVal userState As Object)
            If (Me.saveTrainedOperationCompleted Is Nothing) Then
                Me.saveTrainedOperationCompleted = AddressOf Me.OnsaveTrainedOperationCompleted
            End If
            Me.InvokeAsync("saveTrained", New Object() {pstrEmailAddress, pintTrainingType, pstrPassword}, Me.saveTrainedOperationCompleted, userState)
        End Sub
        
        Private Sub OnsaveTrainedOperationCompleted(ByVal arg As Object)
            If (Not (Me.saveTrainedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent saveTrainedCompleted(Me, New saveTrainedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getClientDataCompletedEventHandler(ByVal sender As Object, ByVal e As getClientDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getClientDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUserDataCompletedEventHandler(ByVal sender As Object, ByVal e As getUserDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As getCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub saveTrainedCompletedEventHandler(ByVal sender As Object, ByVal e As saveTrainedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class saveTrainedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
